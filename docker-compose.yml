services:
  db:
    env_file: ./.env
    image: postgres:16
    command: -c 'max_connections=300'
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    networks:
      streampack:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 60s
      timeout: 5s
      retries: 3
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
  amqp:
    image: apache/activemq-artemis:latest-alpine
    restart: always
    environment:
      ARTEMIS_USER: ${ARTEMIS_USER}
      ARTEMIS_PASSWORD: ${ARTEMIS_PASSWORD}
    ports:
      - "61616:61616"
      - "8161:8161"
    volumes:
      - ./artemisdata:/var/lib/artemis-instance
  streampack:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      LOGFILE_NAME: streampack-output.log
    networks:
      streampack:
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 45
    depends_on:
      db:
        condition: service_healthy

networks:
  streampack:
